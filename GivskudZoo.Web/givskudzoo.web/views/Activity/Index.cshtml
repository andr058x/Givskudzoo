@model GivskudZoo.Web.Models.ActivityModel
<div class="topnav">
    <div class="demo-section k-content col-12" style="text-align: center;">
        @using (Html.BeginForm("Index", "Activity", FormMethod.Get, new {@id = "dateForm"}))
        {
            <input data-provide="datepicker" name="Date" value="@Model.Date.ToString("yyyy-MMMM-dd")" id="datetimepicker1"
                   onchange="document.getElementById('dateForm').submit()" style="width: 150px;">
        }
    </div>
</div>
<div class="schedule-list">
    <h2 class="text-left d-inline" style="padding: 10px; line-height: 46px;">@Model.Date.DayOfWeek</h2>
    @if (User.Identity.IsAuthenticated)
    {
        <button class="btn btn-default btn2 float-right mt-2" id="addActivity" href="javascript:void(0);"
                style="margin-right: 10px;">
            <i class="fa fa-plus"></i> Add Activity
        </button>
    }

    @foreach (var el in @Model.List)
    {
        <div class="activity">
            <div class="activity-closed activity-line" onclick="openExpanded(this)">
                <div class="activity-time">
                    @el.BeginTime
                </div>
                <div class="activity-title">
                    @el.Title
                </div>
            </div>
            <div class="activity-expanded activity-line hidden" onclick="closeExpanded(this)">
                <div class="activity-time">
                    @el.BeginTime / @el.EndTime
                </div>
                <div class="activity-title">
                    @el.Title
                </div>
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="buttons">
                        <a class="btn-sm small-edit-btn buttoncolor mr-1 editActivity" data-selector="@el.Id">
                            <i class="fa fa-pencil-alt"></i>
                        </a>
                        <a class="btn-sm small-edit-btn buttoncolor" onclick="return confirm('Are you sure you want to Delete?')"
                           href="@Url.Action("Delete", "Activity", new {id = el.Id})">
                            <i class="fa fa-trash-alt"></i>
                        </a>
                    </div>
                }
                <div class="activity-description">
                    <img class="activity-image" src="~/Images/captn.png" onerror="this.src = '/Images/givskudLogo.png';"
                         alt="@el.Title"/>
                    <div class="row">
                        <div class="col-12">
                            @el.Description
                        </div>
                        <div class="col-12">
                            @*<a href="#" data-content="@el.Location" rel="popover" data-placement="top"
                               data-original-title="Location" data-trigger="hover"
                               id="popoverLocation">*@
                                <a href="#">
                                <i style="top: 5px;" class="fas fa-map-marker-alt fa-2x">
                                </i>@el.Location
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (Model.List == null || !Model.List.Any())
    {
        <div class="activity">
            <span class="ml-3">Couldn't find anymore Activity</span>
        </div>
    }

</div>
<div id='activityModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content containerand">
            <div id='activityModalContent'></div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function() {
        $('#popoverLocation').popover();

        $('#datetimepicker1').datepicker({
            format: 'yyyy-MM-dd'
        });
    });

    $(function() {
        $("#addActivity").click(function() {
            //debugger;
            var options = { "backdrop": "static", keyboard: true };
            $.ajax({
                type: "GET",
                url: '/Activity/Create',
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function(data) {
                    $('#activityModalContent').html(data);
                    $('#activityModal').modal(options);
                    $('#activityModal').modal('show');
                },
                error: function() {
                    alert("Dynamic content load failed.");
                }
            });
        });
    });

    $(function() {
        $(".editActivity").click(function() {
            //debugger;
            var options = { "backdrop": "static", keyboard: true };
            var selector = $(this).data('selector');
            $.ajax({
                type: "GET",
                url: '/Activity/Edit/' + selector,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function(data) {
                    $('#activityModalContent').html(data);
                    $('#activityModal').modal(options);
                    $('#activityModal').modal('show');
                },
                error: function() {
                    alert("Dynamic content load failed.");
                }
            });
        });
    });

    $("#closbtn").click(function() {
        $('#activityModal').modal('hide');
    });

    //function deleteActivity(ele) {
    //    swal({
    //        title: 'Are you sure?',
    //        text: "You won't be able to revert this!",
    //        type: 'warning',
    //        showCancelButton: true,
    //        confirmButtonColor: '#3085d6',
    //        cancelButtonColor: '#d33',
    //        confirmButtonText: 'Yes, delete activity!',
    //        cancelButtonText: 'Cancel'
    //    }).then((result) => {
    //        if (result.value) {
    //            swal({
    //                title: 'Deleted!',
    //                text: 'The activity has been deleted.',
    //                type: 'success',
    //                showCancelButton: false,
    //                showCloseButton: false,
    //                timer: 1500
    //            })
    //            $(ele).parents(".activity").remove();
    //        }
    //    });

    //}

    function closeAllExpanded() {
        var activityExpanded = $(".activity-expanded");
        var activityClosed = $(".activity-closed.hidden");
        $(activityExpanded).addClass("hidden");
        $(activityClosed).removeClass("hidden");
    }

    function openExpanded(ele) {
        closeAllExpanded();
        var parent = $(ele).parent();
        var activityExpanded = $(parent).find(".activity-expanded");
        $(ele).addClass("hidden");
        $(activityExpanded).removeClass("hidden");
    }

    function closeExpanded(ele) {
        var parent = $(ele).parent();
        var activityClosed = $(parent).find(".activity-closed");
        $(ele).addClass("hidden");
        $(activityClosed).removeClass("hidden");
    }
</script>
<style>
    #date {
        min-width: 300px;
        /*background-color: white;*/
    }
</style>